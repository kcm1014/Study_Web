특정 기능을 하는 구문을 묶어 재사용하는 문법

함수 생김새
function funName(parameter1[,...]){

    [return value;]
}

함수호출
funName();

return 값
return 을 이용한 제어권 반환

함수이름 제작
-. 숫자로 시작 안됨
-. 대소문자 구분
-. camelcase 일반적

변수에 함수저장
매개변수 값으로 함수 사용
리턴값으로 함수 사용

함수정의
방법 1: function 키워드 사용
function 함수이름([매개변수,..]){
    실행구문
    [return 반환값]
}

방법2 : 함수 리터럴을 이용하는 방법
var 변수 = function( ([매개변수,..]){
    실행구문
    [return 반환값]
}

방법3: Function 객체를 이용해서 정의
var 함수ㅜ이름 = new Function(([매개변수,..], 함수본체);

방법4: 익명함수 확장을 이용해 정의하는 방법
(function(매개변수1..){
    실행구문
    [return 반환값]
})(매개변수 값);

중첩함수
함수 내부에 있는 함수 , 
function outer(){
    //inner를 중첩 함수라고 한다.
    function inner(){
        //실행 구분
    }
}
중첩함수는 outer 함수의 변수에 접근이 가능하다.


익명함수ㅜ : 이름이 없는 함수로 함수를 재사용하지 않을 경우 사용
$("#btnStart").click(function(){   // 익명 함수
    document.write("Hello");
});

문제:
"웹동네", "짱아", "딴동네" 이름을 다섯 번씩 출력하기
for 문 세번을 이용한 방법을 설명 후 -> 유지보수의 어려움 / 중복 코드 
함수를 이용한 방법으로 함수 활용도 설명


중복 코드 제거 및 코드 재사용 순서
1. 중복코드 또는 재사용 코드 찾아 함수로 포장하기
2. 중복 코드에서 변경되지 않는 부분과 변경되는 부분 파악하기
3. 변경되는 부분을 매개변수로 만들기
20230201_mission02.html


다음 요구사항 맞게 이미지 배정
1. 이미지 배열 시작 위치는 100 * 100 위치로 
2. 시작시 이미지를 2열 200 * 200 크기로 출력
3. 시작 버튼 클릭시 이미지를 3열 150 * 150 크기로 출력
4. 함수를 이용하여 유지보수하기 쉽게 작성
20230201_mission03.html

