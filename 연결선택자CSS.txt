하위 선택자
상위요소 하위요소
section 내부에 있는 모든 하위(자식과 손자) p 요소에 적용
section p{

}

자식 선택자
section 내부에 있는 자식 p 요소에 적용.
부모요소 > 자식 요소
section > p{

}

인접 형체 선택자
요소1 + 요소2
h1 요소 바로 다음에 나오는 p요소에 적용
h1 + p {

}

형제 선택자
요소1 ~ 요소2
h1 요소 다음에 나오는 모든 p형제 요소에 적용
h1 ~ p {

}


특정 속성이 있는 요소를 선택하는 [속성] 선택자
a 요소중 href 속성을 갖고 있는 요소에 적용
a[href] {

}

특정 속성값이 있는 요소를 선택[속성=속성값]
a 요소중 target 속성이 _blank 인 모든 요소에 적용 
a[target = _blank] {

}

여러 값 중에서 특정 속성값이 포함된 속성 요소를 선택하는 [속성 ~= 값]
class 속성중 button 클래스 속성을 갖고 있는 모든 요소에 적용 : 정확히 일치
[class ~= button ] {

}

특정 속성값이 포함된 속성 요소를 선택하는[속성 |= 값]
title 속성 중에 us가 있거나 us-로 연결된 속성값이 있는 a요소에 적용
a[title |= us] {

}

특정 속성값으로 시작하는 속송 요소를 선택하는 [속성 ^= 값]
타이틀 속성이 eng로 시작하는 a요소 적용
a[title ^= eng] {

}

특정한 값으로 끝나는 속성의 요소를 선택하는 [속성 $= 값]
링크한 파일의 마지막 단어가 xls로 끝나는 요소
[href $= xls ] {

}

일부 속성값이 일치하는 요소를 선택하는 [속성 *= 값]
href 속성중 w3가 포함된 모든 요소.
[href *= w3] {

}


가상 클래스 선택자
:link            // 방문하지 않은 링크
:visited         // 방문한 링크
:hover           // 마우스 포인터 업
:active          // 웹 요소 확성화 했을 때
:focus           // 웹 요소에 초점이 맞추어 졌을 때
:target          // 앵커의 목적지가 되는 부분의 스타일 적용 가능
:enabled         // 지정한 요소를 사용할 수 있는 상태일 때 스타일 적용
:disabled        // 지정한 요소를 사용할 수 없는 상태일 때 스타일 적용
:checked         // 선택한 요소의 스타일을 적용
:not             //지정한 요소가 아닐 때 선택해서 스타일 적용


구조 가상 클래스
:only-child      // 부모 안에 자식 요소가 하나뿐일 때 자식 요소를 선택      
A:only-type-of   // 부모 안에 A요소가 하나뿐일 때 선택
:first-child     // 부모 안에 있는 요소 중에서 첫 번째 자식 요소를 선택
:last-child
A:first-of-typ   // 보무 안에 A요소 중에서 첫번째 요소를 선택
A:last-of-type
:nth-child(n)    // 부모 안에 있는 모든 요소 중에서 n번째 요소를 선택
:nth-last-child(n)
A:nth-of-type(n) // 보무 안에 있는 A요소중 n번재 요소 선택
A:nth-last-of-type(n)


가상 요소
::first-line     // 첫 번재 줄을 선택
::first-letter   // 줄에서 첫 번째 글자를 선택 
::before         // 특정 요소의 앞에 내용이나 스타일 추가
::after          // 특정 요소의 뒤쪽에 내용이나 스타일 추가
